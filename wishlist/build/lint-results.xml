<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 22.3">

    <issue
        id="InvalidPackage"
        severity="Error"
        message="Invalid package reference in library; not included in Android: java.applet. Referenced from javassist.tools.rmi.ObjectImporter."
        category="Correctness"
        priority="6"
        summary="Finds API accesses to APIs that are not supported in Android"
        explanation="This check scans through libraries looking for calls to APIs that are not included in Android.

When you create Android projects, the classpath is set up such that you can only access classes in the API packages that are included in Android. However, if you add other projects to your libs/ folder, there is no guarantee that those .jar files were built with an Android specific classpath, and in particular, they could be accessing unsupported APIs such as java.applet.

This check scans through library jars and looks for references to API packages that are not included in Android and flags these. This is only an error if your code calls one of the library classes which wind up referencing the unsupported package.">
        <location
            file="/home/huibin/Desktop/github-v2/wishlist/libs/robolectric-1.1-jar-with-dependencies.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        severity="Error"
        message="Invalid package reference in library; not included in Android: java.applet. Referenced from javassist.tools.rmi.ObjectImporter."
        category="Correctness"
        priority="6"
        summary="Finds API accesses to APIs that are not supported in Android"
        explanation="This check scans through libraries looking for calls to APIs that are not included in Android.

When you create Android projects, the classpath is set up such that you can only access classes in the API packages that are included in Android. However, if you add other projects to your libs/ folder, there is no guarantee that those .jar files were built with an Android specific classpath, and in particular, they could be accessing unsupported APIs such as java.applet.

This check scans through library jars and looks for references to API packages that are not included in Android and flags these. This is only an error if your code calls one of the library classes which wind up referencing the unsupported package.">
        <location
            file="/home/huibin/Desktop/github-v2/wishlist/libs/robolectric-1.1-jar-with-dependencies.jar"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.main appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/huibin/Desktop/github-v2/wishlist/res/layout/main.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.main appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/huibin/Desktop/github-v2/wishlist/res/layout/main.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.lib_name appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;lib_name&quot;>wishlist&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="/home/huibin/Desktop/github-v2/wishlist/res/values/strings.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.lib_name appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;lib_name&quot;>wishlist&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="/home/huibin/Desktop/github-v2/wishlist/res/values/strings.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Hello World, ACTIVITY_ENTRY_NAME&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Hello World, ACTIVITY_ENTRY_NAME&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/huibin/Desktop/github-v2/wishlist/res/layout/main.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Hello World, ACTIVITY_ENTRY_NAME&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Hello World, ACTIVITY_ENTRY_NAME&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/huibin/Desktop/github-v2/wishlist/res/layout/main.xml"
            line="10"
            column="13"/>
    </issue>

</issues>
